QR코드 기반 주문 시스템 - 개발 기능 명세서

================================================================================
1. 사용자 관리 시스템
================================================================================

1.1 관리자 회원가입/로그인
- 기능: 매장 관리자 계정 생성 및 인증
- API 엔드포인트:
  * POST /api/auth/signup - 회원가입
  * POST /api/auth/login - 로그인
  * POST /api/auth/logout - 로그아웃
  * GET /api/auth/me - 현재 사용자 정보
- 데이터 모델:
  * User (id, email, password, name, phone, role, store_id, created_at)
- 화면:
  * 로그인 페이지
  * 회원가입 페이지
- 비즈니스 로직:
  * 이메일 중복 검증
  * 비밀번호 암호화 (BCrypt)
  * JWT 토큰 기반 인증

1.2 서브계정 관리
- 기능: 아르바이트생용 서브계정 생성/관리
- API 엔드포인트:
  * GET /api/users/sub-accounts - 서브계정 목록
  * POST /api/users/sub-accounts - 서브계정 생성
  * PUT /api/users/sub-accounts/{id} - 서브계정 수정
  * DELETE /api/users/sub-accounts/{id} - 서브계정 삭제
- 데이터 모델:
  * User 테이블 확장 (parent_user_id 추가)
- 화면:
  * 서브계정 관리 페이지
- 비즈니스 로직:
  * 마스터 계정만 서브계정 생성 가능
  * 서브계정은 해당 매장만 접근 가능

================================================================================
2. 매장 관리 시스템
================================================================================

2.1 매장 정보 관리
- 기능: 매장 기본 정보 설정 및 관리
- API 엔드포인트:
  * GET /api/stores/{id} - 매장 정보 조회
  * PUT /api/stores/{id} - 매장 정보 수정
- 데이터 모델:
  * Store (id, name, address, phone, business_hours, is_active, created_at)
- 화면:
  * 매장 정보 설정 페이지
- 비즈니스 로직:
  * 매장별 독립적인 데이터 관리

================================================================================
3. 좌석 및 QR코드 관리 시스템
================================================================================

3.1 좌석 관리
- 기능: 매장 내 좌석 생성/수정/삭제
- API 엔드포인트:
  * GET /api/seats - 좌석 목록 조회
  * POST /api/seats - 좌석 생성
  * PUT /api/seats/{id} - 좌석 수정
  * DELETE /api/seats/{id} - 좌석 삭제
- 데이터 모델:
  * Seat (id, store_id, seat_number, qr_code_uuid, is_active, created_at)
- 화면:
  * 좌석 관리 페이지
  * QR코드 출력 페이지
- 비즈니스 로직:
  * 좌석 생성 시 UUID 자동 생성
  * QR코드 이미지 자동 생성

3.2 QR코드 시스템
- 기능: QR코드 생성 및 유효성 검증
- API 엔드포인트:
  * GET /api/qr/{uuid} - QR코드 유효성 검증
  * POST /api/seats/{id}/regenerate-qr - QR코드 재생성
- 비즈니스 로직:
  * UUID 기반 보안 QR코드
  * 비활성화된 좌석 접근 차단
  * QR코드 URL: https://도메인.com/order/{uuid}

================================================================================
4. 메뉴 관리 시스템 (CRUD)
================================================================================

4.1 메뉴 카테고리 관리
- 기능: 메뉴 카테고리 생성/수정/삭제
- API 엔드포인트:
  * GET /api/categories - 카테고리 목록
  * POST /api/categories - 카테고리 생성
  * PUT /api/categories/{id} - 카테고리 수정
  * DELETE /api/categories/{id} - 카테고리 삭제
- 데이터 모델:
  * Category (id, store_id, name, display_order, is_active, created_at)

4.2 메뉴 관리
- 기능: 메뉴 아이템 생성/수정/삭제
- API 엔드포인트:
  * GET /api/menus - 메뉴 목록 조회
  * POST /api/menus - 메뉴 생성
  * PUT /api/menus/{id} - 메뉴 수정
  * DELETE /api/menus/{id} - 메뉴 삭제
  * PUT /api/menus/{id}/status - 메뉴 상태 변경 (품절/판매중)
- 데이터 모델:
  * Menu (id, store_id, category_id, name, description, price, image_url, is_available, display_order, created_at)
- 화면:
  * 메뉴 관리 페이지
  * 메뉴 등록/수정 폼
- 비즈니스 로직:
  * 이미지 업로드 기능
  * 메뉴 진열 순서 관리
  * 품절 처리 기능

================================================================================
5. 주문 시스템
================================================================================

5.1 고객 주문 인터페이스
- 기능: 고객이 QR코드로 접속하여 주문
- API 엔드포인트:
  * GET /api/stores/{storeId}/menus - 메뉴 목록 (고객용)
  * POST /api/orders - 주문 생성
  * GET /api/orders/{id} - 주문 상세 조회
  * DELETE /api/orders/{id} - 주문 취소 (제조시작 전)
- 데이터 모델:
  * Order (id, store_id, seat_id, total_amount, status, payment_status, created_at)
  * OrderItem (id, order_id, menu_id, quantity, unit_price, total_price)
- 화면:
  * 모바일 주문 페이지
  * 장바구니 페이지
  * 주문 완료 페이지
- 비즈니스 로직:
  * 주문 상태: PENDING(주문접수) → PREPARING(제조시작) → COMPLETED(제조완료) → PICKED_UP(수령완료)
  * 제조시작 전까지만 취소 가능

5.2 관리자 주문 관리
- 기능: 들어온 주문 확인 및 상태 관리
- API 엔드포인트:
  * GET /api/admin/orders - 주문 목록 (관리자용)
  * PUT /api/admin/orders/{id}/status - 주문 상태 변경
  * DELETE /api/admin/orders/{id} - 주문 취소 처리
- 화면:
  * 주문 관리 대시보드
  * 주문 상세 정보 모달
- 비즈니스 로직:
  * 실시간 주문 알림
  * 주문 상태별 필터링
  * 일별/월별 주문 통계

================================================================================
6. 결제 시스템 (토스페이먼츠)
================================================================================

6.1 결제 처리
- 기능: 토스페이먼츠를 통한 결제 처리
- API 엔드포인트:
  * POST /api/payments/prepare - 결제 준비
  * POST /api/payments/confirm - 결제 승인
  * POST /api/payments/cancel - 결제 취소
- 데이터 모델:
  * Payment (id, order_id, payment_key, amount, status, method, approved_at)
- 화면:
  * 결제 페이지 (토스페이먼츠 위젯)
  * 결제 완료 페이지
- 비즈니스 로직:
  * 결제 전 주문 금액 검증
  * 결제 실패 시 주문 상태 롤백
  * 결제 취소 시 환불 처리

================================================================================
7. 실시간 알림 시스템 (WebSocket)
================================================================================

7.1 WebSocket 연결 관리
- 기능: 실시간 양방향 통신
- 엔드포인트:
  * /ws/customer/{orderId} - 고객용 웹소켓
  * /ws/admin/{storeId} - 관리자용 웹소켓
- 비즈니스 로직:
  * 매장별 연결 관리
  * 주문 상태 변경 시 실시간 알림
  * 연결 끊김 시 재연결 처리

7.2 알림 메시지 관리
- 기능: 다양한 상황별 알림 전송
- 알림 종류:
  * 새 주문 접수 (관리자에게)
  * 제조 완료 (고객에게)
  * 주문 취소 (양방향)
- 데이터 모델:
  * Notification (id, user_type, message, order_id, is_read, created_at)

================================================================================
8. 관리자 대시보드
================================================================================

8.1 통계 및 분석
- 기능: 매장 운영 현황 대시보드
- API 엔드포인트:
  * GET /api/admin/dashboard/stats - 기본 통계
  * GET /api/admin/dashboard/sales - 매출 현황
  * GET /api/admin/dashboard/orders - 주문 현황
- 화면:
  * 대시보드 메인 페이지
  * 매출 분석 차트
  * 인기 메뉴 순위
- 비즈니스 로직:
  * 일별/주별/월별 통계
  * 실시간 주문 현황
  * 매출 목표 대비 현황

================================================================================
9. 공통 기능
================================================================================

9.1 파일 업로드
- 기능: 메뉴 이미지 업로드
- API 엔드포인트:
  * POST /api/upload/image - 이미지 업로드
- 비즈니스 로직:
  * 이미지 크기 제한 (5MB)
  * 허용 확장자: jpg, png, gif
  * 이미지 최적화 처리

9.2 에러 처리 및 로깅
- 기능: 전역 예외 처리 및 로그 관리
- 구현사항:
  * Global Exception Handler
  * API 응답 표준화
  * 에러 로그 수집

================================================================================
10. 보안 및 인증
================================================================================

10.1 JWT 기반 인증
- 기능: 토큰 기반 사용자 인증
- 구현사항:
  * Access Token (30분)
  * Refresh Token (7일)
  * 토큰 자동 갱신

10.2 API 보안
- 기능: API 엔드포인트 보안
- 구현사항:
  * CORS 설정
  * Rate Limiting
  * 입력값 검증 (Validation)

================================================================================
11. 배포 및 인프라 (추후 설정)
================================================================================

11.1 CI/CD 파이프라인
- GitHub Actions 설정
- 자동 테스트 및 배포
- 환경별 설정 관리 (dev, prod)

11.2 모니터링
- 애플리케이션 성능 모니터링
- 에러 추적 시스템
- 로그 수집 및 분석 